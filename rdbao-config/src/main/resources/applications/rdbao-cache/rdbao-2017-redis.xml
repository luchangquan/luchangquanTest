<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
    http://www.springframework.org/schema/beans/spring-beans.xsd    
    http://www.springframework.org/schema/tx    
    http://www.springframework.org/schema/tx/spring-tx.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context.xsd   
    http://www.springframework.org/schema/mvc   
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/aop   
    http://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="2" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:properties/${publish.evn}/redis.properties</value>
			</list>
		</property>
	</bean>


	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.rdbao2017.maxTotal}"></property>
		<property name="maxIdle" value="${redis.rdbao2017.maxIdle}"></property>
		<property name="minIdle" value="${redis.rdbao2017.minIdle}"></property>
		<property name="maxWaitMillis" value="${redis.rdbao2017.maxWaitMillis}"></property>
		<property name="minEvictableIdleTimeMillis"
			value="${redis.rdbao2017.minEvictableIdleTimeMillis}"></property>
		<property name="numTestsPerEvictionRun" value="${redis.rdbao2017.numTestsPerEvictionRun}"></property>
		<property name="timeBetweenEvictionRunsMillis"
			value="${redis.rdbao2017.timeBetweenEvictionRunsMillis}"></property>
		<property name="testOnBorrow" value="${redis.rdbao2017.testOnBorrow}"></property>
		<property name="testOnReturn" value="${redis.rdbao2017.testOnReturn}"></property>
		<property name="testWhileIdle" value="${redis.rdbao2017.testWhileIdle}"></property>
	</bean>

	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		destroy-method="destroy">
		<property name="hostName" value="${redis.rdbao2017.hostName}" />
		<property name="port" value="${redis.rdbao2017.port}" />
		<property name="timeout" value="${redis.rdbao2017.timeout}" />
		<property name="database" value="${redis.rdbao2017.database}" />
		<property name="password" value="${redis.rdbao2017.password}" />
		<property name="usePool" value="${redis.rdbao2017.usePool}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<!-- redis template definition p表示对该bean里面的属性进行注入，格式为p:属性名=注入的对象 效果与在bean里面使用<property>标签一样 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory">
		<!-- 序列化方式 建议key/hashKey采用StringRedisSerializer。 -->
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
		<property name="hashValueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>

	</bean>

	<!-- 对string操作的封装 -->
	<!-- <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate" -->
	<!-- p:connection-factory-ref="jedisConnectionFactory" /> -->
	<!-- <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager" 
		c:template-ref="redisTemplate"/> -->
</beans>